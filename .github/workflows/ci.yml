name: ci

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  ci:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        version: [stable, nightly]
    outputs:
      image: ${{ steps.build.outputs.image }}
    steps:
      - name: Install dependencies
        id: install-dependencies
        run: |
          sudo apt-get update -qqq
          sudo apt-get install -yqqq haproxy
      - name: Install Rust
        run: rustup default ${{ matrix.version }}
      - name: Check out the repository to the runner
        uses: actions/checkout@v4
      - name: Build
        id: build
        run: cargo b --examples
      - name: Test extract
        id: test-extract
        run: sh ci/extract.sh
      - name: Test PROXY v1
        id: test-proxy-v1
        run: sh ci/proxy-v1.sh
      - name: Test PROXY v2
        id: test-proxy-v2
        run: sh ci/proxy-v2.sh
      - name: Lint (format)
        if: ${{ matrix.version == 'stable' }}
        id: lint-fmt
        run: cargo fmt --check
      - name: Lint (clippy)
        if: ${{ matrix.version == 'stable' }}
        id: lint-clippy
        run: cargo clippy --offline
      - name: Cache
        if: ${{ (github.event_name == 'release' && ! github.event.release.prerelease && ! github.event.release.draft) || matrix.version == 'nightly' }}
        id: cache
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.version }}
          path: target
          compression-level: 0
          retention-days: 1
  fuzz:
    runs-on: ubuntu-24.04
    needs: [ci]
    steps:
      - name: Install Rust
        run: rustup default nightly
      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz
      - name: Check out the repository to the runner
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/download-artifact@v4
        with:
          name: target-nightly
          path: target
      - name: Fuzz
        run: sh ci/fuzz.sh
  publish:
    runs-on: ubuntu-24.04
    needs: [ci, fuzz]
    if: ${{ github.event_name == 'release' && ! github.event.release.prerelease && ! github.event.release.draft }}
    steps:
      - name: Install Rust
        run: rustup default stable
      - name: Check out the repository to the runner
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/download-artifact@v4
        with:
          name: target-stable
          path: target
      - name: Publish crate
        id: publish-crate
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish
